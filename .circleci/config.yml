version: 2.1
executors:
  my-executor:
    working_directory: ~/code
    docker:
    - image: circleci/android:api-28-alpha
    environment:
      JVM_OPTS: -Xmx3200m

jobs:
  checkout_code:
    executor: my-executor
    steps:
    - checkout
    - restore_cache:
        key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
    - run:
        name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
        command: sudo chmod +x ./gradlew
    - run:
        name: Download Dependencies
        command: ./gradlew androidDependencies
  checkstyle:
    executor: my-executor
    steps:
    - run:
        name: Run Checkstyle
        command: |
          cd ~/code
          ./gradlew checkstyle
  findbugs:
    executor: my-executor
    steps:
    - run:
        name: Run findbugs
        command: |
          cd ~/code
          ./gradlew findbugs
  PMD:
    executor: my-executor
    steps:
    - run:
        name: Run PMD
        command: |
          cd ~/code
          ./gradlew pmd
  Lint:
    executor: my-executor
    steps:
    - run:
        name: Run Lint
        command: |
          cd ~/code
          ./gradlew lint
  run_tests:
    executor: my-executor
    steps:
    - run:
        name: Run Tests
        command: |
          cd ~/code
          ./gradlew lint test
  build_deploy:
    executor: my-executor
    steps:
    - save_cache:
        paths:
        - ~/.gradle
        key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
    - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
        path: app/build/reports
        destination: reports
    - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
        path: app/build/test-results
    # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples
    - run:
        name: Build
        command: |
          cd ~/code
          ./gradlew assembleRelease
    - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
        path: app/build/outputs/apk
        destination: release
    - deploy:
        name: Deploy APK.
        command: |
          if [ "${CIRCLE_BRANCH}" == "master" ]; then
            bash ./scripts/deploy-fabric.sh
          fi
workflows:
  version: 2.1
  build-test-and-deploy:
    jobs:
    - checkout_code
    - checkstyle:
        requires:
        - checkout_code
    - findbugs:
        requires:
        - checkout_code
    - PMD:
        requires:
        - checkout_code
    - Lint:
        requires:
        - checkout_code
    - run_tests:
        requires:
        - checkout_code
    - build_deploy:
        requires:
        - checkstyle
        - findbugs
        - PMD
        - Lint
        - run_tests

