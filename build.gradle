// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        google()
        jcenter()
        
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.3.0'
        
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        
    }
    apply plugin: 'checkstyle'
    checkstyle {
        toolVersion '7.8.1'
    }
    task checkstyle(type: Checkstyle) {
        configFile new File(rootDir, "config/checkstyle/checkstyle.xml")
        source 'src'
        include '**/*.java'
        exclude '**/gen/**'
        exclude '**/R.java'
        exclude '**/BuildConfig.java'
        classpath = files()
    }

    apply plugin: 'pmd'

    task pmd(type: Pmd) {
        description 'Identifying potential problems mainly dead code, duplicated code, cyclomatic complexity and overcomplicated expressions'
        group 'verification'
        ruleSetFiles = files("$project.rootDir/tools/rules-pmd.xml")
        source = fileTree('src/main/java')
        include '**/*.java'
        exclude '**/gen/**'

        reports {
            xml.enabled = false
            html.enabled = true
            html.destination = "$project.buildDir/outputs/pmd/pmd.html"
        }
    }

    apply plugin: 'findbugs'

    task findbugs(type: FindBugs) {
        description 'Find bugs mainly design flaws, bad practices, multithreaded correctness and code vulnerabilities.'
        group 'verification'
        excludeFilter = file("$project.rootDir/tools/rules-findbugs.xml")
        classes = fileTree("$project.buildDir/app/build/intermediates/classes")
        source = fileTree("$project.buildDir/app/src/main/java")
        effort 'max'
        reportLevel = "high"
        classpath = files()

        reports {
            xml.enabled = false
            html.enabled = true
            html.destination = "$project.buildDir/outputs/findbugs/findbugs.html"
        }
    }

}

task clean(type: Delete) {
    delete rootProject.buildDir
}
